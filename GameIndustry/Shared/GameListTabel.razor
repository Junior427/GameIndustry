<div class="table-responsive">
    <table class="table table-striped">
        <thead class="thead-light">
            <tr>
                <th>Name</th>
                <th>Genre</th>
                <th>Release Date</th>
                <th<input type="checkbox" @bind="displayButtons"/></th>
            </tr>
        </thead>
        <tbody>
            <GenericList ListOfItems="Games">
                <ItemTemplate Context="game" >
                    <IndividualGame Game="game" IsTable=true DisplayButtons=displayButtons DeleteGame="DeleteTheGame" />
                </ItemTemplate>
            </GenericList>
        </tbody>
    </table>
</div>

@code {
    [Parameter] public List<Game> Games { get; set; } = new List<Game>();

    public bool displayButtons { get; set; } = true;


    void DeleteTheGame(Game game)
    {
        Games.Remove(game);
    }
    /*************************************************************/
    protected override void OnInitialized()
    { // инициализации компонента, перед отрисовки компонената
        Console.WriteLine($"1.OnInitializedAsync(). Games.Count:{Games?.Count}");
    }

    protected override void OnParametersSet()
    { // после метода OnInitialized, и/или при изменении Параметров
        Console.WriteLine($"2.OnParametersSet(). Games.Count:{Games?.Count}");
    }

    protected override void OnAfterRender(bool firstRender)
    { // после отрисовки компонента
        Console.WriteLine($"3.OnAfterRender(). First render ? {firstRender}");
    }

    protected override bool ShouldRender()
    {
        return true;
    }
        //return false; //запретить перересовывать компонент
        }
